# continuous-experimentation.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-deployment
  labels: { app: model, version: v1}
spec:
  replicas: 1
  selector:
    matchLabels: { app: model, version: v1}
  template:
    metadata:
      labels: { app: model, version: v1}
    spec:
      containers:
        - name: model-service
          image: ghcr.io/remla23-team3/model-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 6789
      imagePullSecrets:
        - name: registry-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment-v1
  labels: { app: app, version: v1 }
spec:
  replicas: 2
  selector:
    matchLabels: { app: app, version: v1}
  template:
    metadata:
      labels: { app: app, version: v1}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
    spec:
      containers:
        - name: app
          image: ghcr.io/remla23-team3/app:latest # (v0.0.5) with the red button
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
      imagePullSecrets:
        - name: registry-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment-v2
  labels: { app: app, version: v2 }
spec:
  replicas: 1
  selector:
    matchLabels: { app: app, version: v2}
  template:
    metadata:
      labels: { app: app, version: v2}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
    spec:
      containers:
        - name: app
          image: ghcr.io/remla23-team3/app:v0.0.4  # without red button
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
      imagePullSecrets:
        - name: registry-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: model-service
spec:
  # type: LoadBalancer
  selector:
    app: model
  ports:
    - name: http
      port: 6789
      targetPort: 6789
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  # type: LoadBalancer
  selector:
    app: app
  ports:
    - name: http
      port: 8081
      targetPort: 8081
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: app
spec:
  host: app-service
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2  
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-virtual-service
spec:
  gateways:
    - my-gateway
  hosts:
  - "*"
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: app-service
        subset: v1
      weight: 50
    - destination:
        host: app-service
        subset: v2
      weight: 50
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: my-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"